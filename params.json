{"name":"buddycloud.js","tagline":"It's like magic, but it's technology.","body":"## Overview\r\nbuddycloud.js enables you to quickly build social features to your webapp. It uses [buddycloud's](http://buddycloud.com/) distributed social network backend and is designed to be easy to use.\r\n\r\n[Full API reference](buddycloud.com/buddycloudjs-reference)\r\n\r\n## Getting started\r\n\r\n### Include buddycloud.js\r\n```html\r\n<script src=\"buddycloud.js\"></script>\r\n```\r\nbuddycloud.js's depends on jQuery ( >= 1.5).\r\n\r\n### finding your API server\r\nbuddycloud is a distributed social network. To find your API server run the following command\r\n```bash\r\ndig -t TXT _buddycloud-api._tcp.buddycloud.org. +short\r\n\"v=1.0\" \"host=api.buddycloud.org\" \"protocol=https\" \"path=/\" \"port=443\"\r\n```\r\n\r\n### Initialize\r\nInitialize buddycloud.js:\r\n```javascript\r\nbuddycloud.init({\r\n  apiUrl: 'https://api.buddycloud.org',\r\n  domain: 'buddycloud.org'\r\n});\r\n```\r\nBy default buddycloud.js will use the buddycloud.org API. If you run your own buddycloud API, point it at that.\r\n\r\n### Authentication\r\nTo handle actions that needs authentication, such as following or media uploading, call the login method. The library stores your credentials (Base64 encoded) and you are ready to call any methods that requires authentication.\r\n```javascript\r\nbuddycloud.Auth.login({\r\n  jid: 'sparkle@buddycloud.org',\r\n  password: 'sparkle123'\r\n});\r\n```\r\nThe library handles **one** user session.\r\n\r\n### Create a new buddycloud user\r\n```javascript\r\nbuddycloud.Account.create({\r\n  jid: 'JewlRider@buddycloud.org',\r\n  password: 'leather-saddle22',\r\n  email: 'jewlrider@unicorn-village.com'\r\n});\r\n```\r\nOnce the user is successfully created, the library stores its credentials and no login is needed.\r\n\r\n### Ajax and promises\r\nbuddycloud.js uses [jQuery.ajax()](http://api.jquery.com/jQuery.ajax/) to make HTTP requests. Every ```$.ajax()``` request returns a jqXHR object that implements a Promise interface (check [Deferred objects](http://api.jquery.com/category/deferred-object/) for more information) and can be used to verify requests results using ```.done()```, ```.fail()```, ```.always()``` and ```.then()``` methods.\r\n\r\nAn example of using promises for checking the result of a login request:\r\n```javascript\r\nbuddycloud.Auth.login({\r\n  jid: 'sparkle@buddycloud.org', \r\n  password: 'sparkle123'\r\n}).done(function() {\r\n  alert('Login successful!');\r\n}).fail(function() {\r\n  alert('Oops, something went wrong.');\r\n});\r\n```\r\n\r\n## Usage example\r\n### Getting a channel node's content\r\nExample: getting the _posts_ for a user or topic channel\r\n\r\n \r\n```javascript\r\nbuddycloud.Content.get({\r\n  channel: 'sparkle@buddycloud.org',\r\n  node: 'posts'\r\n}).done(function(data) {\r\n  console.log(data);\r\n});\r\n```\r\n\r\n \r\n```javascript\r\n[\r\n  {\r\n    \"id\": \"foo\",\r\n    \"author\": \"sparkle@buddycloud.org\",\r\n    \"updated\": \"2013-06-01T12:00:00Z\",\r\n    \"content\": \"buddycloud.js is awesome!\",\r\n  },\r\n  {\r\n    \"id\": \"bar\",\r\n    \"author\": \"henry@buddycloud.org\",\r\n    \"updated\": \"2013-05-31T12:00:00Z\",\r\n    \"content\": \"Hey Sparkle! How are you?\",\r\n  },\r\n  {\r\n    \"id\": \"baz\",\r\n    \"author\": \"sparkle@buddycloud.org\",\r\n    \"updated\": \"2013-05-30T12:00:00Z\",\r\n    \"content\": \"Feeling good today!\",\r\n  }\r\n]\r\n```\r\n\r\n### Retrieve a specific item:\r\nExample: retrieve an individual _post_\r\n\r\n \r\n```javascript\r\nbuddycloud.Content.get({\r\n  channel: 'sparkle@buddycloud.org',\r\n  node: 'posts',\r\n  item: 'foo'\r\n}).done(function(data) {\r\n  console.log(data);\r\n});\r\n```\r\n\r\n \r\n```javascript\r\n{\r\n  \"id\": \"foo\",\r\n  \"author\": \"sparkle@buddycloud.org\",\r\n  \"updated\": \"2013-06-01T12:00:00Z\",\r\n  \"content\": \"I got a new saddle today!\",\r\n}\r\n```\r\n\r\n### Adding new content to a channel's node\r\nExample: posting a status update to a channel\r\n \r\n```javascript\r\nbuddycloud.Content.add({\r\n  channel: 'sparkle@buddycloud.org',\r\n  node: 'posts',\r\n  content: 'Meeting the unicorns for some beer tonight'\r\n});\r\n```\r\n\r\n### Uploading files to a channel\r\nExample: sharing photos to the followers of a channel\r\n\r\n \r\n```javascript\r\nbuddycloud.Media.add('cats@topics.buddycloud.org', {\r\n  file: mediaFile,\r\n  filename: 'tom.jpg',\r\n  title: 'My cat Tom',\r\n  description: 'Chasing Jerry!'\r\n}).done(function(data) {\r\n  console.log(data);\r\n});\r\n```\r\n\r\n \r\n```javascript\r\n{\r\n  \"id\":\"f00\",\r\n  \"fileName\":\"tom.jpg\",\r\n  \"author\":\"sparkle@buddycloud.org\",\r\n  \"title\":\"My cat Tom\",\r\n  \"mimeType\":\"image/jpeg\",\r\n  \"description\":\"Chasing Jerry!\",\r\n  \"fileExtension\":\"jpg\",\r\n  \"shaChecksum\":\"bc46e5fac2f1cbb607c8b253a5af33181f161562\",\r\n  \"fileSize\":60892,\r\n  \"height\":312,\r\n  \"width\":312,\r\n  \"entityId\":\"cats@topics.domain.com\"\r\n}\r\n```\r\n\r\n### Retrieving files from buddycloud\r\n \r\n```javascript\r\nbuddycloud.Media.get({\r\n  channel: 'cats@topics.buddycloud.org',\r\n  mediaId: 'iL3fahp8'\r\n}).done(function() {\r\n  alert('Media retrieved!');\r\n});\r\n```\r\n \r\nWill return a file. There is a special mediaID called ```avatar``` to return the channels' avatar.\r\n\r\nYou can also request a resized image using the ```maxheight``` and ```maxwidth``` parameters:\r\n```javascript\r\nbuddycloud.Media.get({\r\n  channel: 'cats@topics.buddycloud.org',\r\n  mediaId: 'f00'\r\n}, {\r\n  maxheight: 100,\r\n  maxwidth: 100\r\n}).done(function() {\r\n  alert('Media thumbnail retrieved!');\r\n});\r\n```\r\n\r\n### Issues\r\nPlease report issues at [github.com/buddycloud/buddycloud.js](https://github.com/buddycloud/buddycloud.js).\r\nPull requests welcomed.\r\n\r\n### License\r\nbuddycloud.js is open source and available under [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0). ","google":"UA-1075750-2","note":"Don't delete this file! It's used internally to help with page regeneration."}